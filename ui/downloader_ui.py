# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'downloader_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.WindowModal)
        MainWindow.resize(865, 635)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/images/download.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.widget_7 = QtWidgets.QWidget(self.tab)
        self.widget_7.setObjectName("widget_7")
        self.contenedor = QtWidgets.QGridLayout(self.widget_7)
        self.contenedor.setObjectName("contenedor")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.total_size_queue_label = QtWidgets.QLabel(self.widget_7)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.total_size_queue_label.setFont(font)
        self.total_size_queue_label.setObjectName("total_size_queue_label")
        self.gridLayout_4.addWidget(self.total_size_queue_label, 0, 0, 1, 1)
        self.line_6 = QtWidgets.QFrame(self.widget_7)
        self.line_6.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_4.addWidget(self.line_6, 0, 3, 1, 1)
        self.line_7 = QtWidgets.QFrame(self.widget_7)
        self.line_7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_4.addWidget(self.line_7, 0, 1, 1, 1)
        self.download_time_label = QtWidgets.QLabel(self.widget_7)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.download_time_label.setFont(font)
        self.download_time_label.setObjectName("download_time_label")
        self.gridLayout_4.addWidget(self.download_time_label, 0, 2, 1, 1, QtCore.Qt.AlignHCenter)
        self.free_space = QtWidgets.QLabel(self.widget_7)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.free_space.setFont(font)
        self.free_space.setObjectName("free_space")
        self.gridLayout_4.addWidget(self.free_space, 0, 4, 1, 1, QtCore.Qt.AlignRight)
        self.gridLayout_3.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.contenedor.addLayout(self.gridLayout_3, 1, 0, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.widget_7)
        self.tableWidget.setFrameShape(QtWidgets.QFrame.Box)
        self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setShowGrid(False)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(8)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.contenedor.addWidget(self.tableWidget, 0, 0, 1, 1)
        self.gridLayout_5.addWidget(self.widget_7, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab, icon, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_4)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.history_table = QtWidgets.QTableWidget(self.tab_4)
        self.history_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.history_table.setAlternatingRowColors(True)
        self.history_table.setShowGrid(False)
        self.history_table.setObjectName("history_table")
        self.history_table.setColumnCount(3)
        self.history_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.history_table.setHorizontalHeaderItem(2, item)
        self.history_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_8.addWidget(self.history_table, 0, 0, 1, 1)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/images/history.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_4, icon1, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.tab_3)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.errors_table = QtWidgets.QTableWidget(self.tab_3)
        self.errors_table.setFrameShape(QtWidgets.QFrame.Box)
        self.errors_table.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.errors_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.errors_table.setAlternatingRowColors(True)
        self.errors_table.setShowGrid(False)
        self.errors_table.setObjectName("errors_table")
        self.errors_table.setColumnCount(3)
        self.errors_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.errors_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.errors_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.errors_table.setHorizontalHeaderItem(2, item)
        self.errors_table.horizontalHeader().setStretchLastSection(True)
        self.gridLayout_29.addWidget(self.errors_table, 0, 0, 1, 1)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/images/report.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_3, icon2, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem, 2, 0, 1, 1)
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.alert_when_finish_checkb = QtWidgets.QGroupBox(self.groupBox_2)
        self.alert_when_finish_checkb.setCheckable(True)
        self.alert_when_finish_checkb.setObjectName("alert_when_finish_checkb")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.alert_when_finish_checkb)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.change_song_button = QtWidgets.QPushButton(self.alert_when_finish_checkb)
        self.change_song_button.setObjectName("change_song_button")
        self.gridLayout_6.addWidget(self.change_song_button, 0, 1, 1, 1)
        self.sound_path_input = QtWidgets.QLineEdit(self.alert_when_finish_checkb)
        self.sound_path_input.setReadOnly(True)
        self.sound_path_input.setObjectName("sound_path_input")
        self.gridLayout_6.addWidget(self.sound_path_input, 0, 0, 1, 1)
        self.gridLayout_7.addWidget(self.alert_when_finish_checkb, 0, 1, 1, 1)
        self.gridLayout_2.addWidget(self.groupBox_2, 1, 0, 1, 1)
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.widget = QtWidgets.QWidget(self.groupBox_3)
        self.widget.setEnabled(True)
        self.widget.setObjectName("widget")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setObjectName("label_3")
        self.gridLayout_14.addWidget(self.label_3, 0, 0, 1, 1)
        self.max_threads_threads = QtWidgets.QSpinBox(self.widget)
        self.max_threads_threads.setMinimum(1)
        self.max_threads_threads.setMaximum(100)
        self.max_threads_threads.setProperty("value", 5)
        self.max_threads_threads.setObjectName("max_threads_threads")
        self.gridLayout_14.addWidget(self.max_threads_threads, 0, 1, 1, 1)
        self.gridLayout_31.addWidget(self.widget, 1, 0, 1, 1)
        self.widget_2 = QtWidgets.QWidget(self.groupBox_3)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.label_6 = QtWidgets.QLabel(self.widget_2)
        self.label_6.setObjectName("label_6")
        self.gridLayout_18.addWidget(self.label_6, 0, 0, 1, 1)
        self.if_file_already_exists_combo = QtWidgets.QComboBox(self.widget_2)
        self.if_file_already_exists_combo.setObjectName("if_file_already_exists_combo")
        self.if_file_already_exists_combo.addItem("")
        self.if_file_already_exists_combo.addItem("")
        self.if_file_already_exists_combo.addItem("")
        self.gridLayout_18.addWidget(self.if_file_already_exists_combo, 0, 1, 1, 1)
        self.gridLayout_31.addWidget(self.widget_2, 2, 0, 1, 1)
        self.widget_3 = QtWidgets.QWidget(self.groupBox_3)
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.label_8 = QtWidgets.QLabel(self.widget_3)
        self.label_8.setObjectName("label_8")
        self.gridLayout_22.addWidget(self.label_8, 0, 0, 1, 1)
        self.when_downloads_stops_combo = QtWidgets.QComboBox(self.widget_3)
        self.when_downloads_stops_combo.setObjectName("when_downloads_stops_combo")
        self.when_downloads_stops_combo.addItem("")
        self.when_downloads_stops_combo.addItem("")
        self.when_downloads_stops_combo.addItem("")
        self.gridLayout_22.addWidget(self.when_downloads_stops_combo, 0, 1, 1, 1)
        self.gridLayout_31.addWidget(self.widget_3, 2, 1, 1, 1)
        self.widget_4 = QtWidgets.QWidget(self.groupBox_3)
        self.widget_4.setObjectName("widget_4")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.label_5 = QtWidgets.QLabel(self.widget_4)
        self.label_5.setObjectName("label_5")
        self.gridLayout_15.addWidget(self.label_5, 0, 0, 1, 1)
        self.attemps_limit_spin = QtWidgets.QSpinBox(self.widget_4)
        self.attemps_limit_spin.setMinimum(2)
        self.attemps_limit_spin.setMaximum(100)
        self.attemps_limit_spin.setProperty("value", 5)
        self.attemps_limit_spin.setObjectName("attemps_limit_spin")
        self.gridLayout_15.addWidget(self.attemps_limit_spin, 0, 1, 1, 1)
        self.gridLayout_31.addWidget(self.widget_4, 1, 1, 1, 1)
        self.widget_5 = QtWidgets.QWidget(self.groupBox_3)
        self.widget_5.setObjectName("widget_5")
        self.gridLayout = QtWidgets.QGridLayout(self.widget_5)
        self.gridLayout.setObjectName("gridLayout")
        self.label_7 = QtWidgets.QLabel(self.widget_5)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 0, 0, 1, 1)
        self.change_destiny_button = QtWidgets.QPushButton(self.widget_5)
        self.change_destiny_button.setObjectName("change_destiny_button")
        self.gridLayout.addWidget(self.change_destiny_button, 0, 3, 1, 1)
        self.destiny_folder_input = QtWidgets.QLineEdit(self.widget_5)
        self.destiny_folder_input.setText("")
        self.destiny_folder_input.setReadOnly(True)
        self.destiny_folder_input.setObjectName("destiny_folder_input")
        self.gridLayout.addWidget(self.destiny_folder_input, 0, 2, 1, 1)
        self.gridLayout_31.addWidget(self.widget_5, 0, 0, 1, 2)
        self.gridLayout_2.addWidget(self.groupBox_3, 0, 0, 1, 1)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/images/settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.tabWidget.addTab(self.tab_2, icon3, "")
        self.gridLayout_17.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 865, 21))
        self.menubar.setObjectName("menubar")
        self.menuInforme = QtWidgets.QMenu(self.menubar)
        self.menuInforme.setObjectName("menuInforme")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionIniciar_todas = QtWidgets.QAction(MainWindow)
        self.actionIniciar_todas.setObjectName("actionIniciar_todas")
        self.actionPausar_todas = QtWidgets.QAction(MainWindow)
        self.actionPausar_todas.setObjectName("actionPausar_todas")
        self.salir_action = QtWidgets.QAction(MainWindow)
        self.salir_action.setObjectName("salir_action")
        self.actionAyuda = QtWidgets.QAction(MainWindow)
        self.actionAyuda.setObjectName("actionAyuda")
        self.actionAcerca_de = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/about.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAcerca_de.setIcon(icon4)
        self.actionAcerca_de.setObjectName("actionAcerca_de")
        self.cargar_datos_perfil = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/default_user.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cargar_datos_perfil.setIcon(icon5)
        self.cargar_datos_perfil.setObjectName("cargar_datos_perfil")
        self.actionEliminar_links_vencidos = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/Emoji Symbols-70.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEliminar_links_vencidos.setIcon(icon6)
        self.actionEliminar_links_vencidos.setObjectName("actionEliminar_links_vencidos")
        self.actionActivar = QtWidgets.QAction(MainWindow)
        self.actionActivar.setObjectName("actionActivar")
        self.actionDesactivar = QtWidgets.QAction(MainWindow)
        self.actionDesactivar.setObjectName("actionDesactivar")
        self.save_list = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/Emoji Objects-29.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.save_list.setIcon(icon7)
        self.save_list.setObjectName("save_list")
        self.load_list = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/Emoji Objects-107.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.load_list.setIcon(icon8)
        self.load_list.setObjectName("load_list")
        self.actionBarra_de_t_tulo = QtWidgets.QAction(MainWindow)
        self.actionBarra_de_t_tulo.setCheckable(True)
        self.actionBarra_de_t_tulo.setChecked(True)
        self.actionBarra_de_t_tulo.setObjectName("actionBarra_de_t_tulo")
        self.actionDatos_del_perfil = QtWidgets.QAction(MainWindow)
        self.actionDatos_del_perfil.setCheckable(True)
        self.actionDatos_del_perfil.setChecked(True)
        self.actionDatos_del_perfil.setObjectName("actionDatos_del_perfil")
        self.actionModo_Pura_Descarga = QtWidgets.QAction(MainWindow)
        self.actionModo_Pura_Descarga.setObjectName("actionModo_Pura_Descarga")
        self.actionExportar = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/icon_export_n@2x.png"),
                        QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExportar.setIcon(icon9)
        self.actionExportar.setObjectName("actionExportar")
        self.vaciar_informe = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(
            QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/Emoji Symbols-134.png"),
            QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.vaciar_informe.setIcon(icon10)
        self.vaciar_informe.setObjectName("vaciar_informe")
        self.actionPor_nombre = QtWidgets.QAction(MainWindow)
        self.actionPor_nombre.setObjectName("actionPor_nombre")
        self.ordenar_por_nombre = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("../Documents/Mis Proyectos/FreeS3 Downloader v2/recursos/sort_ascending.png"),
                         QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ordenar_por_nombre.setIcon(icon11)
        self.ordenar_por_nombre.setObjectName("ordenar_por_nombre")
        self.menuInforme.addAction(self.vaciar_informe)
        self.menuInforme.addAction(self.actionExportar)
        self.menubar.addAction(self.menuInforme.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.salir_action.triggered.connect(MainWindow.close)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Visuales UCLV Download Manager"))
        self.total_size_queue_label.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>Tamaño total de la descarga</p></body></html>"))
        self.total_size_queue_label.setText(_translate("MainWindow", "Tamaño total: 0.0 Mb"))
        self.download_time_label.setToolTip(
            _translate("MainWindow", "<html><head/><body><p>Tiempo transcurrido de descarga</p></body></html>"))
        self.download_time_label.setText(_translate("MainWindow", "Tiempo transcurrido: -"))
        self.free_space.setToolTip(_translate("MainWindow",
                                              "<html><head/><body><p>Espacio disponible en el disco donde se encuentra la carpeta de las Descargas</p></body></html>"))
        self.free_space.setText(_translate("MainWindow", "Espacio disponible: -"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Nombre"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Estado"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Progreso"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Velocidad"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Tamaño"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Tiempo restante"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Agregada"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Descargas"))
        item = self.history_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Nombre"))
        item = self.history_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Tiempo de descarga"))
        item = self.history_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Destino"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Historial"))
        item = self.errors_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Fecha-Hora"))
        item = self.errors_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Archivo"))
        item = self.errors_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Descripción"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Informe de errores"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Tras descargar"))
        self.alert_when_finish_checkb.setTitle(
            _translate("MainWindow", "Alertar que finalizó la descarga con un sonido"))
        self.change_song_button.setText(_translate("MainWindow", "Cambiar"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Descargas"))
        self.label_3.setText(_translate("MainWindow", "Cantidad de hilos:"))
        self.max_threads_threads.setToolTip(_translate("MainWindow",
                                                       "<html><head/><body><p>Cantidad de descargas que se realizarán a la vez</p><p>Por defecto: 10</p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "Si el archivo existe:"))
        self.if_file_already_exists_combo.setToolTip(_translate("MainWindow",
                                                                "<html><head/><body><p>Acción a llevar a cabo si el archivo a descargar ya existe en el directorio especificado</p></body></html>"))
        self.if_file_already_exists_combo.setItemText(0, _translate("MainWindow", "Sobreescribir"))
        self.if_file_already_exists_combo.setItemText(1, _translate("MainWindow", "Omitir"))
        self.if_file_already_exists_combo.setItemText(2, _translate("MainWindow", "Renombrar"))
        self.label_8.setText(_translate("MainWindow", "Al detener las descargas:"))
        self.when_downloads_stops_combo.setToolTip(_translate("MainWindow",
                                                              "<html><head/><body><p>Acción a llevar a cabo con los archivos descargados a medias al detener las descargas</p></body></html>"))
        self.when_downloads_stops_combo.setItemText(0, _translate("MainWindow", "Preguntar qué hacer"))
        self.when_downloads_stops_combo.setItemText(1, _translate("MainWindow", "Eliminar los archivos incompletos"))
        self.when_downloads_stops_combo.setItemText(2, _translate("MainWindow", "No hacer nada"))
        self.label_5.setText(_translate("MainWindow", "Cantidad de intentos:"))
        self.attemps_limit_spin.setToolTip(_translate("MainWindow",
                                                      "<html><head/><body><p>Cantidad de intentos para lograr un descarga exitosa</p><p>Por defecto: 10</p></body></html>"))
        self.label_7.setText(_translate("MainWindow", "Carpeta de descargas:"))
        self.change_destiny_button.setText(_translate("MainWindow", "Cambiar"))
        self.destiny_folder_input.setToolTip(_translate("MainWindow",
                                                        "<html><head/><body><p>Directorio en el que se guardará el contenido descargado</p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Opciones"))
        self.menuInforme.setTitle(_translate("MainWindow", "Informe"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionIniciar_todas.setText(_translate("MainWindow", "Iniciar todas"))
        self.actionPausar_todas.setText(_translate("MainWindow", "Pausar todas"))
        self.salir_action.setText(_translate("MainWindow", "Salir"))
        self.actionAyuda.setText(_translate("MainWindow", "Ayuda"))
        self.actionAcerca_de.setText(_translate("MainWindow", "Acerca de"))
        self.cargar_datos_perfil.setText(_translate("MainWindow", "Cargar datos"))
        self.cargar_datos_perfil.setShortcut(_translate("MainWindow", "F5"))
        self.actionEliminar_links_vencidos.setText(_translate("MainWindow", "Eliminar links vencidos"))
        self.actionActivar.setText(_translate("MainWindow", "Activar"))
        self.actionDesactivar.setText(_translate("MainWindow", "Desactivar"))
        self.save_list.setText(_translate("MainWindow", "Guardar lista de descarga"))
        self.save_list.setShortcut(_translate("MainWindow", "F2"))
        self.load_list.setText(_translate("MainWindow", "Cargar lista de descarga"))
        self.load_list.setShortcut(_translate("MainWindow", "F3"))
        self.actionBarra_de_t_tulo.setText(_translate("MainWindow", "Barra de título"))
        self.actionDatos_del_perfil.setText(_translate("MainWindow", "Datos del perfil"))
        self.actionModo_Pura_Descarga.setText(_translate("MainWindow", "Modo Pura Descarga"))
        self.actionExportar.setText(_translate("MainWindow", "Exportar"))
        self.vaciar_informe.setText(_translate("MainWindow", "Vaciar la Lista"))
        self.actionPor_nombre.setText(_translate("MainWindow", "Por nombre"))
        self.ordenar_por_nombre.setText(_translate("MainWindow", "Ordenar elementos por nombre"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
